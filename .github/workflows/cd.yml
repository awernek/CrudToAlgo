name: 🚀 CD - Deploy

on:
  release:
    types: [published]
  workflow_dispatch: # Permite deploy manual

env:
  DOTNET_VERSION: '8.0.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: 🚢 Deploy Application
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 📥 Restore dependencies
        run: dotnet restore

      - name: 🏗️ Build for production
        run: dotnet build --configuration Release --no-restore

      - name: 📦 Publish application
        run: dotnet publish CrudToAlgo.API/CrudToAlgo.API.csproj --configuration Release --output ./publish --no-build

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v4

      - name: 🔑 Log in to Container Registry
        uses: docker/login-action@v4
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: 🚢 Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job para deploy em ambiente de staging (opcional)
  deploy-staging:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 🚀 Deploy to staging
        run: |
          echo "🧪 Deploying to staging environment..."
          echo "This step would typically deploy to your staging server"
          # Adicione aqui os comandos específicos para deploy no seu ambiente

  # Job para deploy em produção (apenas em releases)
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'release'
    environment: production # Requer aprovação manual no GitHub
    
    steps:
      - name: 🌟 Deploy to production
        run: |
          echo "🌟 Deploying to production environment..."
          echo "This step would typically deploy to your production server"
          # Adicione aqui os comandos específicos para deploy em produção